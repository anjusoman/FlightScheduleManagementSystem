version: '3.8'
services:
  scheduling-service:
    image: 'docker-spring-boot-postgres:latest'
    build:
      context: .
    container_name: app
    depends_on:
      - db



  dynamodb-local:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
    healthcheck:
      test: [ "CMD-SHELL", '[ "$(curl -s -o /dev/null -I -w ''%{http_code}'' http://localhost:8000)" == "400" ]' ]
      interval: 10s
      timeout: 10s
      retries: 10

  dynamodb-local-setup:
    container_name: dynamodb-local-setup
    depends_on:
      dynamodb-local:
        condition: service_healthy
    image: amazon/aws-cli
    volumes:
      - "./docker/dynamodb/schemas:/tmp/dynamo"
    environment:
      AWS_ACCESS_KEY_ID: 'FAKEID'
      AWS_SECRET_ACCESS_KEY: 'FAKEKEY'
      AWS_REGION: 'us-east-2'
    entrypoint:
      - bash
    command:
      - '-c'
      - |
        aws dynamodb list-tables --endpoint-url http://dynamodb-local:8000 --query "TableNames" --output text | grep -w ScheduledFlight \
        || aws dynamodb create-table --endpoint-url http://dynamodb-local:8000 --cli-input-json file:///tmp/dynamo/ScheduledFlight.json
